[versions]
kotest = "5.8.0"
kotest-spring = "1.1.3"
kotlin = "1.9.22"
kotlin-logging = "6.0.3"
kotlinter = "4.2.0"
logback = "0.1.5"
loki-appender = "1.4.2"
sonar = "4.4.1.3373"
spring-boot = "3.2.1"
spring-dependency-management = "1.1.4"
spring-mockk = "4.0.2"
springdoc = "2.3.0"

[libraries]
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-spring" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlin-logging" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }
logback-jackson = { module = "ch.qos.logback.contrib:logback-jackson", version.ref = "logback" }
logback-json-classic = { module = "ch.qos.logback.contrib:logback-json-classic", version.ref = "logback" }
loki-logback-appender = { module = "com.github.loki4j:loki-logback-appender", version.ref = "loki-appender" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
micrometer-tracing-bridge-otel = { module = "io.micrometer:micrometer-tracing-bridge-otel" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-mockk = { module = "com.ninja-squad:springmockk", version.ref = "spring-mockk" }
springdoc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

[bundles]
kotest = ["kotest-runner-junit5", "kotest-assertions-core", "kotest-extensions-spring"]
kotlin = ["kotlin-reflect", "kotlinx-coroutines-core", "kotlinx-coroutines-reactor"]
logging = ["logback-jackson", "logback-json-classic", "loki-logback-appender"]
tracing = ["micrometer-tracing-bridge-otel", "opentelemetry-exporter-otlp"]

[plugins]
git-properties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.1" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
sonar = { id = "org.sonarqube", version.ref = "sonar" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
